openapi: 3.0.3
info:
  title: CRM Loan Management API
  version: 1.0.0
  description: API for CRM Loan Management System
paths:
  /api/applications/{application_id}/generate-pdf/:
    get:
      operationId: applications_generate_pdf_retrieve
      description: |-
        Generate a filled PDF form from an Application instance.

        Args:
            request: The HTTP request
            application_id: The ID of the Application to generate a PDF for

        Returns:
            Response with the path to the generated PDF and a list of missing fields
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        required: true
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratePDF'
          description: ''
    post:
      operationId: applications_generate_pdf_create
      description: |-
        Generate a filled PDF form from an Application instance.

        Args:
            request: The HTTP request
            application_id: The ID of the Application to generate a PDF for

        Returns:
            Response with the path to the generated PDF and a list of missing fields
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratePDF'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GeneratePDF'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GeneratePDF'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratePDF'
          description: ''
  /api/applications/{id}/borrowers/:
    put:
      operationId: applications_borrowers_update
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/{id}/extend-loan/:
    post:
      operationId: applications_extend_loan_create
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/{id}/funding-calculation/:
    post:
      operationId: applications_funding_calculation_create
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/{id}/funding-calculation-history/:
    get:
      operationId: applications_funding_calculation_history_retrieve
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/{id}/sign/:
    post:
      operationId: applications_sign_create
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/{id}/signature/:
    post:
      operationId: applications_signature_create
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/{id}/stage/:
    put:
      operationId: applications_stage_update
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/applications/:
    get:
      operationId: applications_applications_list
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApplicationListList'
          description: ''
    post:
      operationId: applications_applications_create
      description: ViewSet for viewing and editing Application instances.
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationCreate'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCreate'
          description: ''
  /api/applications/applications/{id}/:
    get:
      operationId: applications_applications_retrieve
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDetail'
          description: ''
    put:
      operationId: applications_applications_update
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
    patch:
      operationId: applications_applications_partial_update
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
    delete:
      operationId: applications_applications_destroy
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/applications/applications/{id}/borrowers/:
    put:
      operationId: applications_applications_borrowers_update
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/applications/{id}/extend_loan/:
    post:
      operationId: applications_applications_extend_loan_create
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/applications/{id}/funding_calculation/:
    post:
      operationId: applications_applications_funding_calculation_create
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/applications/{id}/funding_calculation_history/:
    get:
      operationId: applications_applications_funding_calculation_history_retrieve
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/applications/{id}/sign/:
    post:
      operationId: applications_applications_sign_create
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/applications/{id}/signature/:
    post:
      operationId: applications_applications_signature_create
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/applications/{id}/update_stage/:
    put:
      operationId: applications_applications_update_stage_update
      description: ViewSet for viewing and editing Application instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this application.
        required: true
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/applications/enhanced_list/:
    get:
      operationId: applications_applications_enhanced_list_retrieve
      description: Enhanced list view with additional fields for the application dashboard
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/applications/validate_schema/:
    post:
      operationId: applications_applications_validate_schema_create
      description: ViewSet for viewing and editing Application instances.
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/create-with-cascade/:
    post:
      operationId: applications_create_with_cascade_create
      description: ViewSet for viewing and editing Application instances.
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationCreate'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCreate'
          description: ''
  /api/applications/enhanced-applications/:
    get:
      operationId: applications_enhanced_applications_retrieve
      description: Enhanced list view with additional fields for the application dashboard
      tags:
      - applications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/applications/manual-funding-calculator/:
    post:
      operationId: applications_manual_funding_calculator_create
      description: Calculate funding based on manually provided parameters
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualFundingCalculation'
            examples:
              ExampleRequest:
                value:
                  loan_amount: 500000
                  interest_rate: 5.5
                  security_value: 750000
                  establishment_fee_rate: 2.5
                  capped_interest_months: 9
                  monthly_line_fee_rate: 0.25
                  brokerage_fee_rate: 1.0
                  application_fee: 500
                  due_diligence_fee: 1000
                  legal_fee_before_gst: 2000
                  valuation_fee: 800
                  monthly_account_fee: 50
                  working_fee: 0
                summary: Example Request
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ManualFundingCalculation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManualFundingCalculation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                ExampleRequest:
                  value:
                    loan_amount: 500000
                    interest_rate: 5.5
                    security_value: 750000
                    establishment_fee_rate: 2.5
                    capped_interest_months: 9
                    monthly_line_fee_rate: 0.25
                    brokerage_fee_rate: 1.0
                    application_fee: 500
                    due_diligence_fee: 1000
                    legal_fee_before_gst: 2000
                    valuation_fee: 800
                    monthly_account_fee: 50
                    working_fee: 0
                  summary: Example Request
          description: ''
  /api/applications/validate-schema/:
    post:
      operationId: applications_validate_schema_create
      description: ViewSet for viewing and editing Application instances.
      tags:
      - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationList'
          description: ''
  /api/borrowers/borrowers/:
    get:
      operationId: borrowers_borrowers_list
      description: ViewSet for managing borrowers
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBorrowerListList'
          description: ''
    post:
      operationId: borrowers_borrowers_create
      description: ViewSet for managing borrowers
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowerDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BorrowerDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BorrowerDetail'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerDetail'
          description: ''
  /api/borrowers/borrowers/{borrower_id}/assets/:
    get:
      operationId: borrowers_borrowers_assets_list
      description: ViewSet for managing company borrower assets
      parameters:
      - in: path
        name: borrower_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyAssetList'
          description: ''
    post:
      operationId: borrowers_borrowers_assets_create
      description: ViewSet for managing company borrower assets
      parameters:
      - in: path
        name: borrower_id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyAsset'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAsset'
          description: ''
  /api/borrowers/borrowers/{borrower_id}/assets/{id}/:
    get:
      operationId: borrowers_borrowers_assets_retrieve
      description: ViewSet for managing company borrower assets
      parameters:
      - in: path
        name: borrower_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAsset'
          description: ''
    put:
      operationId: borrowers_borrowers_assets_update
      description: ViewSet for managing company borrower assets
      parameters:
      - in: path
        name: borrower_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyAsset'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAsset'
          description: ''
    patch:
      operationId: borrowers_borrowers_assets_partial_update
      description: ViewSet for managing company borrower assets
      parameters:
      - in: path
        name: borrower_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyAsset'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAsset'
          description: ''
    delete:
      operationId: borrowers_borrowers_assets_destroy
      description: ViewSet for managing company borrower assets
      parameters:
      - in: path
        name: borrower_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/borrowers/borrowers/{id}/:
    get:
      operationId: borrowers_borrowers_retrieve
      description: ViewSet for managing borrowers
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this borrower.
        required: true
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerDetail'
          description: ''
    put:
      operationId: borrowers_borrowers_update
      description: ViewSet for managing borrowers
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this borrower.
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowerDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BorrowerDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BorrowerDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerDetail'
          description: ''
    patch:
      operationId: borrowers_borrowers_partial_update
      description: ViewSet for managing borrowers
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this borrower.
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBorrowerDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBorrowerDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBorrowerDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerDetail'
          description: ''
    delete:
      operationId: borrowers_borrowers_destroy
      description: ViewSet for managing borrowers
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this borrower.
        required: true
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/borrowers/guarantors/:
    get:
      operationId: borrowers_guarantors_list
      description: ViewSet for managing guarantors
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBorrowerGuarantorList'
          description: ''
    post:
      operationId: borrowers_guarantors_create
      description: ViewSet for managing guarantors
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowerGuarantor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BorrowerGuarantor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BorrowerGuarantor'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerGuarantor'
          description: ''
  /api/borrowers/guarantors/{guarantor_id}/assets/:
    get:
      operationId: borrowers_guarantors_assets_list
      description: ViewSet for managing guarantor assets
      parameters:
      - in: path
        name: guarantor_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGuarantorAssetList'
          description: ''
    post:
      operationId: borrowers_guarantors_assets_create
      description: ViewSet for managing guarantor assets
      parameters:
      - in: path
        name: guarantor_id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuarantorAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GuarantorAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GuarantorAsset'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuarantorAsset'
          description: ''
  /api/borrowers/guarantors/{guarantor_id}/assets/{id}/:
    get:
      operationId: borrowers_guarantors_assets_retrieve
      description: ViewSet for managing guarantor assets
      parameters:
      - in: path
        name: guarantor_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuarantorAsset'
          description: ''
    put:
      operationId: borrowers_guarantors_assets_update
      description: ViewSet for managing guarantor assets
      parameters:
      - in: path
        name: guarantor_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuarantorAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GuarantorAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GuarantorAsset'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuarantorAsset'
          description: ''
    patch:
      operationId: borrowers_guarantors_assets_partial_update
      description: ViewSet for managing guarantor assets
      parameters:
      - in: path
        name: guarantor_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGuarantorAsset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGuarantorAsset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGuarantorAsset'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuarantorAsset'
          description: ''
    delete:
      operationId: borrowers_guarantors_assets_destroy
      description: ViewSet for managing guarantor assets
      parameters:
      - in: path
        name: guarantor_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/borrowers/guarantors/{id}/:
    get:
      operationId: borrowers_guarantors_retrieve
      description: ViewSet for managing guarantors
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this guarantor.
        required: true
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerGuarantor'
          description: ''
    put:
      operationId: borrowers_guarantors_update
      description: ViewSet for managing guarantors
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this guarantor.
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowerGuarantor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BorrowerGuarantor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BorrowerGuarantor'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerGuarantor'
          description: ''
    patch:
      operationId: borrowers_guarantors_partial_update
      description: ViewSet for managing guarantors
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this guarantor.
        required: true
      tags:
      - borrowers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBorrowerGuarantor'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBorrowerGuarantor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBorrowerGuarantor'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BorrowerGuarantor'
          description: ''
    delete:
      operationId: borrowers_guarantors_destroy
      description: ViewSet for managing guarantors
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this guarantor.
        required: true
      tags:
      - borrowers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/brokers/:
    get:
      operationId: brokers_list
      description: API endpoint for managing brokers
      parameters:
      - in: query
        name: branch
        schema:
          type: integer
      - in: query
        name: min_applications
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBrokerListList'
          description: ''
    post:
      operationId: brokers_create
      description: API endpoint for managing brokers
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrokerDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrokerDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerDetail'
          description: ''
  /api/brokers/{id}/:
    get:
      operationId: brokers_retrieve
      description: API endpoint for managing brokers
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this broker.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerDetail'
          description: ''
    put:
      operationId: brokers_update
      description: API endpoint for managing brokers
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this broker.
        required: true
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BrokerDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BrokerDetail'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerDetail'
          description: ''
    patch:
      operationId: brokers_partial_update
      description: API endpoint for managing brokers
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this broker.
        required: true
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBrokerDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBrokerDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBrokerDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerDetail'
          description: ''
    delete:
      operationId: brokers_destroy
      description: API endpoint for managing brokers
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this broker.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/brokers/{id}/applications/:
    get:
      operationId: brokers_applications_retrieve
      description: Get all applications for a broker
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this broker.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerDetail'
          description: ''
  /api/brokers/{id}/stats/:
    get:
      operationId: brokers_stats_retrieve
      description: Get statistics for a broker
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this broker.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerDetail'
          description: ''
  /api/brokers/bdms/:
    get:
      operationId: brokers_bdms_list
      description: API endpoint for managing BDMs
      parameters:
      - in: query
        name: branch
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBDMList'
          description: ''
    post:
      operationId: brokers_bdms_create
      description: API endpoint for managing BDMs
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BDM'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BDM'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BDM'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BDM'
          description: ''
  /api/brokers/bdms/{id}/:
    get:
      operationId: brokers_bdms_retrieve
      description: API endpoint for managing BDMs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this BDM.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BDM'
          description: ''
    put:
      operationId: brokers_bdms_update
      description: API endpoint for managing BDMs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this BDM.
        required: true
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BDM'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BDM'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BDM'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BDM'
          description: ''
    patch:
      operationId: brokers_bdms_partial_update
      description: API endpoint for managing BDMs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this BDM.
        required: true
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBDM'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBDM'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBDM'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BDM'
          description: ''
    delete:
      operationId: brokers_bdms_destroy
      description: API endpoint for managing BDMs
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this BDM.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/brokers/bdms/{id}/applications/:
    get:
      operationId: brokers_bdms_applications_retrieve
      description: Get all applications for a BDM
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this BDM.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BDM'
          description: ''
  /api/brokers/bdms/create_with_branch/:
    post:
      operationId: brokers_bdms_create_with_branch_create
      description: Create a BDM with branch information in a single request
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BDM'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BDM'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BDM'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BDM'
          description: ''
  /api/brokers/branches/:
    get:
      operationId: brokers_branches_list
      description: API endpoint for managing branches
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBranchList'
          description: ''
    post:
      operationId: brokers_branches_create
      description: API endpoint for managing branches
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /api/brokers/branches/{id}/:
    get:
      operationId: brokers_branches_retrieve
      description: API endpoint for managing branches
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    put:
      operationId: brokers_branches_update
      description: API endpoint for managing branches
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Branch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Branch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    patch:
      operationId: brokers_branches_partial_update
      description: API endpoint for managing branches
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - brokers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBranch'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
    delete:
      operationId: brokers_branches_destroy
      description: API endpoint for managing branches
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/brokers/branches/{id}/bdms/:
    get:
      operationId: brokers_branches_bdms_retrieve
      description: Get all BDMs for a branch
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /api/brokers/branches/{id}/brokers/:
    get:
      operationId: brokers_branches_brokers_retrieve
      description: Get all brokers for a branch
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this branch.
        required: true
      tags:
      - brokers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
          description: ''
  /api/documents/applications/{application_id}/ledger/:
    get:
      operationId: documents_applications_ledger_retrieve
      description: API endpoint for getting the ledger for an application
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationLedger'
          description: ''
  /api/documents/documents/:
    get:
      operationId: documents_documents_list
      description: API endpoint for managing documents
      parameters:
      - in: query
        name: application
        schema:
          type: integer
      - in: query
        name: borrower
        schema:
          type: integer
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: document_type
        schema:
          type: string
          enum:
          - application_form
          - bank_statement
          - contract
          - formal_approval
          - id_verification
          - indicative_letter
          - other
          - payslip
          - qs_report
          - tax_return
          - valuation_report
        description: |-
          * `application_form` - Application Form
          * `indicative_letter` - Indicative Letter
          * `formal_approval` - Formal Approval
          * `valuation_report` - Valuation Report
          * `qs_report` - Quantity Surveyor Report
          * `id_verification` - ID Verification
          * `bank_statement` - Bank Statement
          * `payslip` - Payslip
          * `tax_return` - Tax Return
          * `contract` - Contract
          * `other` - Other
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: documents_documents_create
      description: API endpoint for managing documents
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/documents/documents/{id}/:
    get:
      operationId: documents_documents_retrieve
      description: API endpoint for managing documents
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: documents_documents_update
      description: API endpoint for managing documents
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    patch:
      operationId: documents_documents_partial_update
      description: API endpoint for managing documents
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDocument'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    delete:
      operationId: documents_documents_destroy
      description: API endpoint for managing documents
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/documents/{id}/create-version/:
    post:
      operationId: documents_documents_create_version_create
      description: API endpoint for creating a new version of a document
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/documents/documents/{id}/download/:
    get:
      operationId: documents_documents_download_retrieve
      description: Download a document
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/documents/fees/:
    get:
      operationId: documents_fees_list
      description: API endpoint for managing fees
      parameters:
      - in: query
        name: application
        schema:
          type: integer
      - in: query
        name: due_after
        schema:
          type: string
          format: date
      - in: query
        name: due_before
        schema:
          type: string
          format: date
      - in: query
        name: fee_type
        schema:
          type: string
          enum:
          - application
          - broker
          - legal
          - other
          - settlement
          - valuation
        description: |-
          * `application` - Application Fee
          * `valuation` - Valuation Fee
          * `legal` - Legal Fee
          * `broker` - Broker Fee
          * `settlement` - Settlement Fee
          * `other` - Other Fee
      - in: query
        name: is_paid
        schema:
          type: boolean
      - in: query
        name: max_amount
        schema:
          type: number
      - in: query
        name: min_amount
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFeeList'
          description: ''
    post:
      operationId: documents_fees_create
      description: API endpoint for managing fees
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fee'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: ''
  /api/documents/fees/{id}/:
    get:
      operationId: documents_fees_retrieve
      description: API endpoint for managing fees
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: ''
    put:
      operationId: documents_fees_update
      description: API endpoint for managing fees
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fee'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: ''
    patch:
      operationId: documents_fees_partial_update
      description: API endpoint for managing fees
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFee'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: ''
    delete:
      operationId: documents_fees_destroy
      description: API endpoint for managing fees
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this fee.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/fees/{id}/mark-paid/:
    post:
      operationId: documents_fees_mark_paid_create
      description: API endpoint for marking a fee as paid
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Fee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Fee'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: ''
  /api/documents/note-comments/:
    get:
      operationId: documents_note_comments_list
      description: API endpoint for managing note comments
      parameters:
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - in: query
        name: created_by
        schema:
          type: integer
      - in: query
        name: note
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteCommentList'
          description: ''
    post:
      operationId: documents_note_comments_create
      description: API endpoint for managing note comments
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteComment'
          description: ''
  /api/documents/note-comments/{id}/:
    get:
      operationId: documents_note_comments_retrieve
      description: API endpoint for managing note comments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note comment.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteComment'
          description: ''
    put:
      operationId: documents_note_comments_update
      description: API endpoint for managing note comments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note comment.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteComment'
          description: ''
    patch:
      operationId: documents_note_comments_partial_update
      description: API endpoint for managing note comments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note comment.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNoteComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNoteComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNoteComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteComment'
          description: ''
    delete:
      operationId: documents_note_comments_destroy
      description: API endpoint for managing note comments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note comment.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/notes/:
    get:
      operationId: documents_notes_list
      description: API endpoint for managing notes
      parameters:
      - in: query
        name: application
        schema:
          type: integer
      - in: query
        name: borrower
        schema:
          type: integer
      - in: query
        name: created_after
        schema:
          type: string
          format: date
      - in: query
        name: created_before
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteList'
          description: ''
    post:
      operationId: documents_notes_create
      description: API endpoint for managing notes
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/documents/notes/{id}/:
    get:
      operationId: documents_notes_retrieve
      description: API endpoint for managing notes
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    put:
      operationId: documents_notes_update
      description: API endpoint for managing notes
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    patch:
      operationId: documents_notes_partial_update
      description: API endpoint for managing notes
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNote'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
    delete:
      operationId: documents_notes_destroy
      description: API endpoint for managing notes
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/notes/{id}/add_comment/:
    post:
      operationId: documents_notes_add_comment_create
      description: Add a comment to a note
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/documents/notes/{id}/comments/:
    get:
      operationId: documents_notes_comments_retrieve
      description: Get all comments for a note
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this note.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
  /api/documents/repayments/:
    get:
      operationId: documents_repayments_list
      description: API endpoint for managing repayments
      parameters:
      - in: query
        name: application
        schema:
          type: integer
      - in: query
        name: due_after
        schema:
          type: string
          format: date
      - in: query
        name: due_before
        schema:
          type: string
          format: date
      - in: query
        name: is_paid
        schema:
          type: boolean
      - in: query
        name: max_amount
        schema:
          type: number
      - in: query
        name: min_amount
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRepaymentList'
          description: ''
    post:
      operationId: documents_repayments_create
      description: API endpoint for managing repayments
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Repayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Repayment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repayment'
          description: ''
  /api/documents/repayments/{id}/:
    get:
      operationId: documents_repayments_retrieve
      description: API endpoint for managing repayments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this repayment.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repayment'
          description: ''
    put:
      operationId: documents_repayments_update
      description: API endpoint for managing repayments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this repayment.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Repayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Repayment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repayment'
          description: ''
    patch:
      operationId: documents_repayments_partial_update
      description: API endpoint for managing repayments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this repayment.
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRepayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRepayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRepayment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repayment'
          description: ''
    delete:
      operationId: documents_repayments_destroy
      description: API endpoint for managing repayments
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this repayment.
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/documents/repayments/{id}/mark-paid/:
    post:
      operationId: documents_repayments_mark_paid_create
      description: API endpoint for marking a repayment as paid
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repayment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Repayment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Repayment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repayment'
          description: ''
  /api/products/products/:
    get:
      operationId: products_products_list
      description: API endpoint for managing loan products
      parameters:
      - in: query
        name: application
        schema:
          type: integer
      - in: query
        name: applications
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: borrower
        schema:
          type: integer
      - in: query
        name: borrowers
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: products_products_create
      description: API endpoint for managing loan products
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/products/{id}/:
    get:
      operationId: products_products_retrieve
      description: API endpoint for managing loan products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: products_products_update
      description: API endpoint for managing loan products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: products_products_partial_update
      description: API endpoint for managing loan products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: products_products_destroy
      description: API endpoint for managing loan products
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Product.
        required: true
      tags:
      - products
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/reports/application-status/:
    get:
      operationId: reports_application_status_retrieve
      description: API endpoint for application status reports
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatusReport'
          description: ''
  /api/reports/application-volume/:
    get:
      operationId: reports_application_volume_retrieve
      description: API endpoint for application volume reports
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationVolumeReport'
          description: ''
  /api/reports/repayment-compliance/:
    get:
      operationId: reports_repayment_compliance_retrieve
      description: API endpoint for repayment compliance reports
      tags:
      - reports
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepaymentComplianceReport'
          description: ''
  /api/users/auth/login/:
    post:
      operationId: users_auth_login_create
      description: API endpoint for user login
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh:
                    type: string
                  access:
                    type: string
          description: ''
  /api/users/auth/logout/:
    post:
      operationId: users_auth_logout_create
      description: API endpoint for user logout
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/users/auth/refresh/:
    post:
      operationId: users_auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/auth/register/:
    post:
      operationId: users_auth_register_create
      description: API endpoint for user registration
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/auth/reset-password-confirm/:
    post:
      operationId: users_auth_reset_password_confirm_create
      description: API endpoint for confirming a password reset
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/users/auth/reset-password-request/:
    post:
      operationId: users_auth_reset_password_request_create
      description: API endpoint for requesting a password reset
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/users/download-email-logs/:
    get:
      operationId: users_download_email_logs_retrieve
      description: |-
        View for downloading email logs as a DOCX file.
        Only available to admin users.
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadEmailLogs'
          description: ''
  /api/users/email-preview/:
    get:
      operationId: users_email_preview_retrieve
      description: |-
        View for previewing email templates in development mode.
        Only available when DEBUG=True.
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPreview'
          description: ''
  /api/users/notification-preferences/:
    get:
      operationId: users_notification_preferences_retrieve
      description: Get notification preferences for the current user
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreference'
          description: ''
    put:
      operationId: users_notification_preferences_update
      description: Update notification preferences for the current user
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationPreference'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPreference'
          description: ''
  /api/users/notifications/:
    get:
      operationId: users_notifications_list
      description: API endpoint for listing user notifications
      parameters:
      - in: query
        name: is_read
        schema:
          type: boolean
      - in: query
        name: notification_type
        schema:
          type: string
          enum:
          - application_status
          - document_uploaded
          - note_reminder
          - repayment_overdue
          - repayment_upcoming
          - signature_required
          - system
        description: |-
          * `application_status` - Application Status Change
          * `repayment_upcoming` - Repayment Upcoming
          * `repayment_overdue` - Repayment Overdue
          * `note_reminder` - Note Reminder
          * `document_uploaded` - Document Uploaded
          * `signature_required` - Signature Required
          * `system` - System Notification
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationListList'
          description: ''
  /api/users/notifications-viewset/:
    get:
      operationId: users_notifications_viewset_list
      description: API endpoint for managing notifications
      parameters:
      - in: query
        name: is_read
        schema:
          type: boolean
      - in: query
        name: notification_type
        schema:
          type: string
          enum:
          - application_status
          - document_uploaded
          - note_reminder
          - repayment_overdue
          - repayment_upcoming
          - signature_required
          - system
        description: |-
          * `application_status` - Application Status Change
          * `repayment_upcoming` - Repayment Upcoming
          * `repayment_overdue` - Repayment Overdue
          * `note_reminder` - Note Reminder
          * `document_uploaded` - Document Uploaded
          * `signature_required` - Signature Required
          * `system` - System Notification
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationListList'
          description: ''
  /api/users/notifications-viewset/{id}/:
    get:
      operationId: users_notifications_viewset_retrieve
      description: API endpoint for managing notifications
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/users/notifications-viewset/{id}/mark_as_read/:
    post:
      operationId: users_notifications_viewset_mark_as_read_create
      description: Mark a notification as read
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/users/notifications-viewset/mark_all_as_read/:
    post:
      operationId: users_notifications_viewset_mark_all_as_read_create
      description: Mark all notifications as read
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/users/notifications-viewset/unread_count/:
    get:
      operationId: users_notifications_viewset_unread_count_retrieve
      description: Get count of unread notifications
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/users/notifications/count/:
    get:
      operationId: users_notifications_count_retrieve
      description: API endpoint for getting unread notification count
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationList'
          description: ''
  /api/users/notifications/mark-read/:
    post:
      operationId: users_notifications_mark_read_create
      description: API endpoint for marking notifications as read
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Notification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/users/profile/:
    get:
      operationId: users_profile_retrieve
      description: API endpoint for retrieving user profile
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/profile/update/:
    put:
      operationId: users_profile_update_update
      description: API endpoint for updating user profile
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_profile_update_partial_update
      description: API endpoint for updating user profile
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/users/:
    get:
      operationId: users_users_list
      description: API endpoint for managing users
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_users_create
      description: API endpoint for managing users
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/users/{id}/:
    get:
      operationId: users_users_retrieve
      description: API endpoint for managing users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_users_update
      description: API endpoint for managing users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_users_partial_update
      description: API endpoint for managing users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_users_destroy
      description: API endpoint for managing users
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/users/me/:
    get:
      operationId: users_users_me_retrieve
      description: Get current user information
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    ApplicationCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reference_number:
          type: string
          maxLength: 20
        loan_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        loan_term:
          type: integer
          nullable: true
          description: Loan term in months
        interest_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        purpose:
          type: string
          nullable: true
        repayment_frequency:
          $ref: '#/components/schemas/RepaymentFrequencyEnum'
        application_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ApplicationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        product_id:
          type: string
          nullable: true
          maxLength: 50
        estimated_settlement_date:
          type: string
          format: date
          nullable: true
        stage:
          $ref: '#/components/schemas/StageEnum'
        branch_id:
          type: integer
          nullable: true
          readOnly: true
        bd_id:
          type: integer
          nullable: true
          readOnly: true
        borrowers:
          type: array
          items:
            $ref: '#/components/schemas/Borrower'
        guarantors:
          type: array
          items:
            $ref: '#/components/schemas/Guarantor'
        company_borrowers:
          type: array
          items:
            $ref: '#/components/schemas/CompanyBorrower'
        security_properties:
          type: array
          items:
            $ref: '#/components/schemas/SecurityProperty'
        loan_requirements:
          type: array
          items:
            $ref: '#/components/schemas/LoanRequirement'
        loan_purpose:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LoanPurposeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        additional_comments:
          type: string
          nullable: true
        prior_application:
          type: boolean
        prior_application_details:
          type: string
          nullable: true
        exit_strategy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ExitStrategyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        exit_strategy_details:
          type: string
          nullable: true
        valuer_company_name:
          type: string
          nullable: true
          maxLength: 255
        valuer_contact_name:
          type: string
          nullable: true
          maxLength: 255
        valuer_phone:
          type: string
          nullable: true
          maxLength: 20
        valuer_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        qs_company_name:
          type: string
          nullable: true
          maxLength: 255
        qs_contact_name:
          type: string
          nullable: true
          maxLength: 255
        qs_phone:
          type: string
          nullable: true
          maxLength: 20
        qs_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        funding_calculation_input:
          $ref: '#/components/schemas/FundingCalculationInput'
        has_pending_litigation:
          type: boolean
          description: Do the Borrower(s) and the Guarantor(s) have any pending or
            past litigation matters (within the last 2 years)?
        has_unsatisfied_judgements:
          type: boolean
          description: Are there any unsatisfied judgements against the Borrower(s)
            and the Guarantor(s)?
        has_been_bankrupt:
          type: boolean
          description: Have the Borrower(s) and the Guarantor(s) been bankrupt or
            insolvent in the past 5 years?
        has_been_refused_credit:
          type: boolean
          description: Has the Borrower(s) and the Guarantor(s) been refused credit
            by a credit provider in the last 1 year?
        has_outstanding_ato_debt:
          type: boolean
          description: Are there any outstanding debts current or otherwise due to
            the ATO by the Borrower(s) and the Guarantor(s)?
        has_outstanding_tax_returns:
          type: boolean
          description: Does the Borrower(s) and the Guarantor(s) have outstanding
            Tax or BAS returns due to be lodged with the ATO?
        has_payment_arrangements:
          type: boolean
          description: Has the Borrower(s) and the Guarantor(s) made payment arrangements
            with a creditor to payout debt that is still current?
        solvency_enquiries_details:
          type: string
          nullable: true
          description: Additional details for any 'Yes' answers to solvency enquiries
      required:
      - bd_id
      - branch_id
      - id
    ApplicationDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        reference_number:
          type: string
          maxLength: 20
        loan_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        loan_term:
          type: integer
          nullable: true
          description: Loan term in months
        interest_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
        purpose:
          type: string
          nullable: true
        repayment_frequency:
          $ref: '#/components/schemas/RepaymentFrequencyEnum'
        application_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ApplicationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        product_id:
          type: string
          nullable: true
          maxLength: 50
        estimated_settlement_date:
          type: string
          format: date
          nullable: true
        stage:
          $ref: '#/components/schemas/StageEnum'
        stage_display:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        loan_purpose:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LoanPurposeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        additional_comments:
          type: string
          nullable: true
        prior_application:
          type: boolean
        prior_application_details:
          type: string
          nullable: true
        exit_strategy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ExitStrategyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        exit_strategy_details:
          type: string
          nullable: true
        has_pending_litigation:
          type: boolean
          description: Do the Borrower(s) and the Guarantor(s) have any pending or
            past litigation matters (within the last 2 years)?
        has_unsatisfied_judgements:
          type: boolean
          description: Are there any unsatisfied judgements against the Borrower(s)
            and the Guarantor(s)?
        has_been_bankrupt:
          type: boolean
          description: Have the Borrower(s) and the Guarantor(s) been bankrupt or
            insolvent in the past 5 years?
        has_been_refused_credit:
          type: boolean
          description: Has the Borrower(s) and the Guarantor(s) been refused credit
            by a credit provider in the last 1 year?
        has_outstanding_ato_debt:
          type: boolean
          description: Are there any outstanding debts current or otherwise due to
            the ATO by the Borrower(s) and the Guarantor(s)?
        has_outstanding_tax_returns:
          type: boolean
          description: Does the Borrower(s) and the Guarantor(s) have outstanding
            Tax or BAS returns due to be lodged with the ATO?
        has_payment_arrangements:
          type: boolean
          description: Has the Borrower(s) and the Guarantor(s) made payment arrangements
            with a creditor to payout debt that is still current?
        solvency_enquiries_details:
          type: string
          nullable: true
          description: Additional details for any 'Yes' answers to solvency enquiries
        borrowers:
          type: array
          items:
            $ref: '#/components/schemas/Borrower'
          readOnly: true
        guarantors:
          type: array
          items:
            $ref: '#/components/schemas/Guarantor'
          readOnly: true
        broker:
          allOf:
          - $ref: '#/components/schemas/BrokerDetail'
          readOnly: true
        bd:
          allOf:
          - $ref: '#/components/schemas/BDM'
          readOnly: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        security_properties:
          type: array
          items:
            $ref: '#/components/schemas/SecurityProperty'
          readOnly: true
        loan_requirements:
          type: array
          items:
            $ref: '#/components/schemas/LoanRequirement'
          readOnly: true
        documents:
          type: array
          items: {}
          readOnly: true
        notes:
          type: array
          items: {}
          readOnly: true
        fees:
          type: array
          items: {}
          readOnly: true
        repayments:
          type: array
          items: {}
          readOnly: true
        ledger_entries:
          type: array
          items: {}
          readOnly: true
        security_address:
          type: string
          nullable: true
        security_type:
          type: string
          nullable: true
          maxLength: 50
        security_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        valuer_company_name:
          type: string
          nullable: true
          maxLength: 255
        valuer_contact_name:
          type: string
          nullable: true
          maxLength: 255
        valuer_phone:
          type: string
          nullable: true
          maxLength: 20
        valuer_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        valuation_date:
          type: string
          format: date
          nullable: true
        valuation_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        qs_company_name:
          type: string
          nullable: true
          maxLength: 255
        qs_contact_name:
          type: string
          nullable: true
          maxLength: 255
        qs_phone:
          type: string
          nullable: true
          maxLength: 20
        qs_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        qs_report_date:
          type: string
          format: date
          nullable: true
        signed_by:
          type: string
          nullable: true
          maxLength: 255
        signature_date:
          type: string
          format: date
          nullable: true
        uploaded_pdf_path:
          type: string
          format: uri
          nullable: true
        funding_result:
          type: object
          additionalProperties: {}
          nullable: true
          description: Stores the current funding calculation result
        created_by_details:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
      required:
      - bd
      - borrowers
      - branch
      - broker
      - created_at
      - created_by_details
      - documents
      - fees
      - guarantors
      - id
      - ledger_entries
      - loan_requirements
      - notes
      - repayments
      - security_properties
      - stage_display
      - updated_at
    ApplicationLedger:
      type: object
      description: Serializer for application ledger summary
      properties:
        ledger_entries:
          type: array
          items:
            $ref: '#/components/schemas/Ledger'
        total_funded:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_repaid:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        total_fees:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,13}(?:\.\d{0,2})?$
      required:
      - balance
      - ledger_entries
      - total_fees
      - total_funded
      - total_repaid
    ApplicationLiability:
      type: object
      description: Liability serializer specifically for application context
      properties:
        id:
          type: integer
          readOnly: true
        liability_type:
          $ref: '#/components/schemas/LiabilityTypeEnum'
        description:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        monthly_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        bg_type:
          allOf:
          - $ref: '#/components/schemas/BgType856Enum'
          description: |-
            Indicates if this liability belongs to B/G1 or B/G2

            * `bg1` - B/G1
            * `bg2` - B/G2
      required:
      - amount
      - description
      - id
      - liability_type
    ApplicationList:
      type: object
      description: Serializer for listing applications with summary information
      properties:
        id:
          type: integer
          readOnly: true
        reference_number:
          type: string
          maxLength: 20
        borrower_name:
          type: string
          description: Get the primary borrower name(s)
          readOnly: true
        stage:
          $ref: '#/components/schemas/StageEnum'
        stage_display:
          type: string
          readOnly: true
        bdm_name:
          type: string
          description: Get the BDM name
          readOnly: true
        guarantor_name:
          type: string
          description: Get the guarantor name(s)
          readOnly: true
        purpose:
          type: string
          readOnly: true
        product_name:
          type: string
          description: Get the product name
          readOnly: true
        security_address:
          type: string
          description: Get the security property address
          readOnly: true
        loan_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        estimated_settlement_date:
          type: string
          format: date
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        application_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ApplicationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        borrower_count:
          type: integer
          readOnly: true
        solvency_issues:
          type: object
          additionalProperties: {}
          description: Get solvency issues summary
          readOnly: true
      required:
      - bdm_name
      - borrower_count
      - borrower_name
      - created_at
      - guarantor_name
      - id
      - product_name
      - purpose
      - security_address
      - solvency_issues
      - stage_display
      - updated_at
    ApplicationStatusReport:
      type: object
      description: Serializer for application status report data
      properties:
        total_active:
          type: integer
        total_settled:
          type: integer
        total_declined:
          type: integer
        total_withdrawn:
          type: integer
        active_by_stage:
          type: object
          additionalProperties:
            type: integer
        avg_time_in_stage:
          type: object
          additionalProperties:
            type: number
            format: double
        inquiry_to_approval_rate:
          type: number
          format: double
        approval_to_settlement_rate:
          type: number
          format: double
        overall_success_rate:
          type: number
          format: double
      required:
      - active_by_stage
      - approval_to_settlement_rate
      - avg_time_in_stage
      - inquiry_to_approval_rate
      - overall_success_rate
      - total_active
      - total_declined
      - total_settled
      - total_withdrawn
    ApplicationTypeEnum:
      enum:
      - residential
      - commercial
      - construction
      - refinance
      - investment
      - smsf
      type: string
      description: |-
        * `residential` - Residential
        * `commercial` - Commercial
        * `construction` - Construction
        * `refinance` - Refinance
        * `investment` - Investment
        * `smsf` - SMSF
    ApplicationVolumeReport:
      type: object
      description: Serializer for application volume report data
      properties:
        total_applications:
          type: integer
        total_loan_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,12}(?:\.\d{0,2})?$
        average_loan_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        stage_breakdown:
          type: object
          additionalProperties:
            type: integer
        time_breakdown:
          type: array
          items:
            type: object
            additionalProperties: {}
        bd_breakdown:
          type: array
          items:
            type: object
            additionalProperties: {}
        type_breakdown:
          type: object
          additionalProperties:
            type: integer
      required:
      - average_loan_amount
      - bd_breakdown
      - stage_breakdown
      - time_breakdown
      - total_applications
      - total_loan_amount
      - type_breakdown
    AssetTypeEnum:
      enum:
      - Property
      - Vehicle
      - Savings
      - Investment Shares
      - Credit Card
      - Other Creditor
      - Other
      - To be refinanced
      type: string
      description: |-
        * `Property` - Property
        * `Vehicle` - Vehicle
        * `Savings` - Savings
        * `Investment Shares` - Investment Shares
        * `Credit Card` - Credit Card
        * `Other Creditor` - Other Creditor
        * `Other` - Other
        * `To be refinanced` - To be refinanced
    BDM:
      type: object
      description: Serializer for BDM information
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        branch_name:
          type: string
          writeOnly: true
        address:
          type: string
          writeOnly: true
        branch_phone:
          type: string
          writeOnly: true
        branch_email:
          type: string
          format: email
          writeOnly: true
      required:
      - branch
      - id
      - name
    BgType856Enum:
      enum:
      - bg1
      - bg2
      type: string
      description: |-
        * `bg1` - B/G1
        * `bg2` - B/G2
    BgTypeEnum:
      enum:
      - BG1
      - BG2
      type: string
      description: |-
        * `BG1` - BG1
        * `BG2` - BG2
    BlankEnum:
      enum:
      - ''
    Borrower:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        date_of_birth:
          type: string
          format: date
          nullable: true
        address:
          type: object
          additionalProperties: {}
          readOnly: true
        employment_info:
          type: object
          additionalProperties: {}
          readOnly: true
        tax_id:
          type: string
          nullable: true
          description: Tax File Number or equivalent
          maxLength: 50
        marital_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        residency_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ResidencyStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        referral_source:
          type: string
          nullable: true
          maxLength: 100
        tags:
          type: string
          nullable: true
          maxLength: 255
      required:
      - address
      - employment_info
      - id
    BorrowerDetail:
      type: object
      description: Serializer for detailed borrower information
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          nullable: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        residential_address:
          type: string
          nullable: true
        mailing_address:
          type: string
          nullable: true
        tax_id:
          type: string
          nullable: true
          description: Tax File Number or equivalent
          maxLength: 50
        marital_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        residency_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ResidencyStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        employment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/EmploymentTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        employer_name:
          type: string
          nullable: true
          maxLength: 255
        employer_address:
          type: string
          nullable: true
        job_title:
          type: string
          nullable: true
          maxLength: 100
        employment_duration:
          type: integer
          nullable: true
          description: Duration in months
        annual_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        other_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        monthly_expenses:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        bank_name:
          type: string
          nullable: true
          maxLength: 100
        bank_account_name:
          type: string
          nullable: true
          maxLength: 100
        bank_account_number:
          type: string
          nullable: true
          maxLength: 30
        bank_bsb:
          type: string
          nullable: true
          maxLength: 10
        referral_source:
          type: string
          nullable: true
          maxLength: 100
        tags:
          type: string
          nullable: true
          maxLength: 255
        notes_text:
          type: string
          nullable: true
        is_company:
          type: boolean
        company_name:
          type: string
          nullable: true
          maxLength: 255
        company_abn:
          type: string
          nullable: true
          maxLength: 20
        company_acn:
          type: string
          nullable: true
          maxLength: 20
        industry_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/IndustryTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        contact_number:
          type: string
          nullable: true
          maxLength: 20
        annual_company_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        is_trustee:
          type: boolean
        is_smsf_trustee:
          type: boolean
        trustee_name:
          type: string
          nullable: true
          maxLength: 255
        registered_address_unit:
          type: string
          nullable: true
          maxLength: 20
        registered_address_street_no:
          type: string
          nullable: true
          maxLength: 20
        registered_address_street_name:
          type: string
          nullable: true
          maxLength: 100
        registered_address_suburb:
          type: string
          nullable: true
          maxLength: 100
        registered_address_state:
          type: string
          nullable: true
          maxLength: 50
        registered_address_postcode:
          type: string
          nullable: true
          maxLength: 10
        company_address:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
      required:
      - created_at
      - created_by
      - id
      - updated_at
    BorrowerGuarantor:
      type: object
      description: Serializer for guarantor information
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        guarantor_type:
          $ref: '#/components/schemas/GuarantorTypeEnum'
        title:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TitleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          nullable: true
        drivers_licence_no:
          type: string
          nullable: true
          maxLength: 50
        home_phone:
          type: string
          nullable: true
          maxLength: 20
        mobile:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        address_unit:
          type: string
          nullable: true
          maxLength: 20
        address_street_no:
          type: string
          nullable: true
          maxLength: 20
        address_street_name:
          type: string
          nullable: true
          maxLength: 100
        address_suburb:
          type: string
          nullable: true
          maxLength: 100
        address_state:
          type: string
          nullable: true
          maxLength: 50
        address_postcode:
          type: string
          nullable: true
          maxLength: 10
        address:
          type: string
          nullable: true
        occupation:
          type: string
          nullable: true
          maxLength: 100
        employer_name:
          type: string
          nullable: true
          maxLength: 255
        employment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GuarantorEmploymentTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        annual_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        company_name:
          type: string
          nullable: true
          maxLength: 255
        company_abn:
          type: string
          nullable: true
          maxLength: 20
        company_acn:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        borrower:
          type: integer
          nullable: true
        application:
          type: integer
          nullable: true
      required:
      - created_at
      - created_by
      - id
      - updated_at
    BorrowerList:
      type: object
      description: Serializer for listing borrowers with minimal information
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        application_count:
          type: integer
          readOnly: true
        residential_address:
          type: string
          nullable: true
        mailing_address:
          type: string
          nullable: true
        address:
          type: object
          additionalProperties: {}
          description: Get formatted address information
          readOnly: true
        related_brokers:
          type: array
          items: {}
          description: Get brokers related to this borrower through applications
          readOnly: true
        is_company:
          type: boolean
      required:
      - address
      - application_count
      - created_at
      - id
      - related_brokers
    Branch:
      type: object
      description: Serializer for branch information
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
      required:
      - id
      - name
    BrokerDetail:
      type: object
      description: Serializer for detailed broker information
      properties:
        id:
          type: integer
          readOnly: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        bdms:
          type: array
          items:
            $ref: '#/components/schemas/BDM'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        name:
          type: string
          maxLength: 100
        company:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        address:
          type: string
          nullable: true
        commission_bank_name:
          type: string
          nullable: true
          maxLength: 100
        commission_account_name:
          type: string
          nullable: true
          maxLength: 100
        commission_account_number:
          type: string
          nullable: true
          maxLength: 30
        commission_bsb:
          type: string
          nullable: true
          maxLength: 10
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
      required:
      - bdms
      - branch
      - created_at
      - created_by
      - id
      - name
      - updated_at
    BrokerList:
      type: object
      description: Serializer for listing brokers with minimal information
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        company:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
      required:
      - id
      - name
    CompanyAsset:
      type: object
      description: Serializer for company assets
      properties:
        id:
          type: integer
          readOnly: true
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        description:
          type: string
          nullable: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        amount_owing:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        to_be_refinanced:
          type: boolean
        address:
          type: string
          nullable: true
      required:
      - asset_type
      - id
    CompanyBorrower:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        company_name:
          type: string
          nullable: true
          maxLength: 255
        company_abn:
          type: string
          nullable: true
          maxLength: 20
        company_acn:
          type: string
          nullable: true
          maxLength: 20
        industry_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/IndustryTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        contact_number:
          type: string
          nullable: true
          maxLength: 20
        annual_company_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        is_trustee:
          type: boolean
        is_smsf_trustee:
          type: boolean
        trustee_name:
          type: string
          nullable: true
          maxLength: 255
        registered_address_unit:
          type: string
          nullable: true
          maxLength: 20
        registered_address_street_no:
          type: string
          nullable: true
          maxLength: 20
        registered_address_street_name:
          type: string
          nullable: true
          maxLength: 100
        registered_address_suburb:
          type: string
          nullable: true
          maxLength: 100
        registered_address_state:
          type: string
          nullable: true
          maxLength: 50
        registered_address_postcode:
          type: string
          nullable: true
          maxLength: 10
        directors:
          type: array
          items:
            $ref: '#/components/schemas/Director'
        financial_info:
          $ref: '#/components/schemas/FinancialInfo'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/CompanyAsset'
        liabilities:
          type: array
          items:
            $ref: '#/components/schemas/Liability'
      required:
      - id
    Director:
      type: object
      description: Serializer for company directors
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        roles:
          type: string
          description: Comma-separated list of roles
          maxLength: 255
        director_id:
          type: string
          nullable: true
          maxLength: 50
      required:
      - id
      - name
      - roles
    Document:
      type: object
      description: Serializer for documents
      properties:
        id:
          type: integer
          readOnly: true
        document_type_display:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        file_url:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        file:
          type: string
          format: uri
        file_name:
          type: string
          readOnly: true
          nullable: true
        file_size:
          type: integer
          readOnly: true
          nullable: true
          description: File size in bytes
        file_type:
          type: string
          readOnly: true
          nullable: true
          description: MIME type
        version:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        previous_version:
          type: integer
          nullable: true
        application:
          type: integer
          nullable: true
        borrower:
          type: integer
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - created_at
      - created_by
      - created_by_name
      - document_type_display
      - file
      - file_name
      - file_size
      - file_type
      - file_url
      - id
      - updated_at
      - version
    DocumentTypeEnum:
      enum:
      - application_form
      - indicative_letter
      - formal_approval
      - valuation_report
      - qs_report
      - id_verification
      - bank_statement
      - payslip
      - tax_return
      - contract
      - other
      type: string
      description: |-
        * `application_form` - Application Form
        * `indicative_letter` - Indicative Letter
        * `formal_approval` - Formal Approval
        * `valuation_report` - Valuation Report
        * `qs_report` - Quantity Surveyor Report
        * `id_verification` - ID Verification
        * `bank_statement` - Bank Statement
        * `payslip` - Payslip
        * `tax_return` - Tax Return
        * `contract` - Contract
        * `other` - Other
    DownloadEmailLogs:
      type: object
      description: Serializer for downloading email logs endpoint
      properties:
        ids:
          type: array
          items:
            type: integer
          description: List of email log IDs to export
      required:
      - ids
    EmailPreview:
      type: object
      description: Serializer for email preview endpoint
      properties:
        template:
          type: string
          description: Template name to preview
      required:
      - template
    EmploymentTypeEnum:
      enum:
      - full_time
      - part_time
      - casual
      - self_employed
      - contractor
      - unemployed
      - retired
      type: string
      description: |-
        * `full_time` - Full Time
        * `part_time` - Part Time
        * `casual` - Casual
        * `self_employed` - Self Employed
        * `contractor` - Contractor
        * `unemployed` - Unemployed
        * `retired` - Retired
    ExitStrategyEnum:
      enum:
      - sale
      - refinance
      - income
      - other
      type: string
      description: |-
        * `sale` - Sale of Property
        * `refinance` - Refinance
        * `income` - Income/Cash Flow
        * `other` - Other
    Fee:
      type: object
      description: Serializer for fees
      properties:
        id:
          type: integer
          readOnly: true
        fee_type_display:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        invoice_url:
          type: string
          readOnly: true
        fee_type:
          $ref: '#/components/schemas/FeeTypeEnum'
        description:
          type: string
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
          nullable: true
        paid_date:
          type: string
          format: date
          nullable: true
        invoice:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        application:
          type: integer
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - amount
      - application
      - created_at
      - created_by
      - created_by_name
      - fee_type
      - fee_type_display
      - id
      - invoice_url
      - status
      - updated_at
    FeeTypeEnum:
      enum:
      - application
      - valuation
      - legal
      - broker
      - settlement
      - other
      type: string
      description: |-
        * `application` - Application Fee
        * `valuation` - Valuation Fee
        * `legal` - Legal Fee
        * `broker` - Broker Fee
        * `settlement` - Settlement Fee
        * `other` - Other Fee
    FinancialInfo:
      type: object
      properties:
        annual_revenue:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        net_profit:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        assets:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        liabilities:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
      required:
      - annual_revenue
      - assets
      - liabilities
      - net_profit
    FundingCalculationInput:
      type: object
      description: Serializer for funding calculation input fields
      properties:
        establishment_fee_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        capped_interest_months:
          type: integer
          minimum: 1
          default: 9
        monthly_line_fee_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        brokerage_fee_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        application_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_diligence_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        legal_fee_before_gst:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        valuation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        monthly_account_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        working_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          default: '0.00'
      required:
      - application_fee
      - brokerage_fee_rate
      - due_diligence_fee
      - establishment_fee_rate
      - legal_fee_before_gst
      - monthly_account_fee
      - monthly_line_fee_rate
      - valuation_fee
    GeneratePDF:
      type: object
      description: Serializer for PDF generation endpoint
      properties:
        template_name:
          type: string
        output_format:
          allOf:
          - $ref: '#/components/schemas/OutputFormatEnum'
          default: pdf
    Guarantor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        guarantor_type:
          $ref: '#/components/schemas/GuarantorTypeEnum'
        title:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TitleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          nullable: true
        drivers_licence_no:
          type: string
          nullable: true
          maxLength: 50
        home_phone:
          type: string
          nullable: true
          maxLength: 20
        mobile:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        address_unit:
          type: string
          nullable: true
          maxLength: 20
        address_street_no:
          type: string
          nullable: true
          maxLength: 20
        address_street_name:
          type: string
          nullable: true
          maxLength: 100
        address_suburb:
          type: string
          nullable: true
          maxLength: 100
        address_state:
          type: string
          nullable: true
          maxLength: 50
        address_postcode:
          type: string
          nullable: true
          maxLength: 10
        occupation:
          type: string
          nullable: true
          maxLength: 100
        employer_name:
          type: string
          nullable: true
          maxLength: 255
        employment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GuarantorEmploymentTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        annual_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        company_name:
          type: string
          nullable: true
          maxLength: 255
        company_abn:
          type: string
          nullable: true
          maxLength: 20
        company_acn:
          type: string
          nullable: true
          maxLength: 20
        borrower:
          type: integer
          nullable: true
        application:
          type: integer
          nullable: true
        assets:
          type: array
          items:
            $ref: '#/components/schemas/GuarantorAsset'
        liabilities:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationLiability'
      required:
      - id
    GuarantorAsset:
      type: object
      description: Serializer for guarantor assets
      properties:
        id:
          type: integer
          readOnly: true
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        description:
          type: string
          nullable: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        amount_owing:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        address:
          type: string
          nullable: true
        bg_type:
          nullable: true
          description: |-
            Indicates if this asset belongs to BG1 or BG2 (only for guarantor assets)

            * `BG1` - BG1
            * `BG2` - BG2
          oneOf:
          - $ref: '#/components/schemas/BgTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - asset_type
      - id
    GuarantorEmploymentTypeEnum:
      enum:
      - full_time
      - part_time
      - casual
      - contract
      type: string
      description: |-
        * `full_time` - Full Time
        * `part_time` - Part Time
        * `casual` - Casual/Temp
        * `contract` - Contract
    GuarantorTypeEnum:
      enum:
      - individual
      - company
      type: string
      description: |-
        * `individual` - Individual
        * `company` - Company
    IndustryTypeEnum:
      enum:
      - agriculture
      - mining
      - manufacturing
      - construction
      - retail
      - transport
      - hospitality
      - finance
      - real_estate
      - professional
      - education
      - healthcare
      - arts
      - other
      type: string
      description: |-
        * `agriculture` - Agriculture
        * `mining` - Mining
        * `manufacturing` - Manufacturing
        * `construction` - Construction
        * `retail` - Retail
        * `transport` - Transport
        * `hospitality` - Hospitality
        * `finance` - Finance
        * `real_estate` - Real Estate
        * `professional` - Professional Services
        * `education` - Education
        * `healthcare` - Healthcare
        * `arts` - Arts and Recreation
        * `other` - Other
    Ledger:
      type: object
      description: Serializer for ledger entries
      properties:
        id:
          type: integer
          readOnly: true
        application:
          type: integer
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        transaction_type_display:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
        transaction_date:
          type: string
          format: date-time
          nullable: true
        related_fee:
          type: integer
          nullable: true
        related_fee_type:
          type: string
          readOnly: true
        related_repayment:
          type: integer
          nullable: true
        created_by:
          type: integer
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - amount
      - application
      - created_at
      - created_by_name
      - description
      - id
      - related_fee_type
      - transaction_type
      - transaction_type_display
    Liability:
      type: object
      description: Serializer for liabilities
      properties:
        id:
          type: integer
          readOnly: true
        liability_type:
          $ref: '#/components/schemas/LiabilityTypeEnum'
        description:
          type: string
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        lender:
          type: string
          nullable: true
          maxLength: 100
        monthly_payment:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        to_be_refinanced:
          type: boolean
        bg_type:
          allOf:
          - $ref: '#/components/schemas/BgType856Enum'
          description: |-
            Indicates if this liability belongs to B/G1 or B/G2

            * `bg1` - B/G1
            * `bg2` - B/G2
      required:
      - amount
      - description
      - id
      - liability_type
    LiabilityTypeEnum:
      enum:
      - mortgage
      - personal_loan
      - car_loan
      - credit_card
      - tax_debt
      - other_creditor
      - other
      type: string
      description: |-
        * `mortgage` - Mortgage
        * `personal_loan` - Personal Loan
        * `car_loan` - Car Loan
        * `credit_card` - Credit Card
        * `tax_debt` - Tax Debt
        * `other_creditor` - Other Creditor
        * `other` - Other
    LoanPurposeEnum:
      enum:
      - purchase
      - refinance
      - construction
      - equity_release
      - debt_consolidation
      - business_expansion
      - working_capital
      - other
      type: string
      description: |-
        * `purchase` - Purchase
        * `refinance` - Refinance
        * `construction` - Construction
        * `equity_release` - Equity Release
        * `debt_consolidation` - Debt Consolidation
        * `business_expansion` - Business Expansion
        * `working_capital` - Working Capital
        * `other` - Other
    LoanRequirement:
      type: object
      description: Serializer for loan requirements
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          maxLength: 255
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
      required:
      - amount
      - description
      - id
    Logout:
      type: object
      description: Serializer for user logout endpoint
      properties:
        refresh:
          type: string
          description: Refresh token to blacklist
      required:
      - refresh
    ManualFundingCalculation:
      type: object
      description: Serializer for manual funding calculation with application parameters
      properties:
        loan_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        interest_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        security_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        establishment_fee_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        capped_interest_months:
          type: integer
          minimum: 1
          default: 9
        monthly_line_fee_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        brokerage_fee_rate:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        application_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_diligence_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        legal_fee_before_gst:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        valuation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        monthly_account_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        working_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          default: '0.00'
      required:
      - application_fee
      - brokerage_fee_rate
      - due_diligence_fee
      - establishment_fee_rate
      - interest_rate
      - legal_fee_before_gst
      - loan_amount
      - monthly_account_fee
      - monthly_line_fee_rate
      - security_value
      - valuation_fee
    MaritalStatusEnum:
      enum:
      - single
      - married
      - de_facto
      - divorced
      - widowed
      type: string
      description: |-
        * `single` - Single
        * `married` - Married
        * `de_facto` - De Facto
        * `divorced` - Divorced
        * `widowed` - Widowed
    Note:
      type: object
      description: Serializer for notes
      properties:
        id:
          type: integer
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        assigned_to_name:
          type: string
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/NoteComment'
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        content:
          type: string
          nullable: true
        remind_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        application:
          type: integer
          nullable: true
        borrower:
          type: integer
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - assigned_to_name
      - comments
      - created_at
      - created_by
      - created_by_name
      - id
      - updated_at
    NoteComment:
      type: object
      description: Serializer for note comments
      properties:
        id:
          type: integer
          readOnly: true
        note:
          type: integer
        content:
          type: string
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_at
      - created_by
      - created_by_name
      - id
      - note
      - updated_at
    Notification:
      type: object
      description: Serializer for Notification model
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        message:
          type: string
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        related_object_id:
          type: integer
          nullable: true
        related_object_type:
          type: string
          nullable: true
          maxLength: 50
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        read_at:
          type: string
          format: date-time
          nullable: true
        user:
          type: integer
      required:
      - created_at
      - id
      - message
      - notification_type
      - title
      - user
    NotificationList:
      type: object
      description: Serializer for listing notifications
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        notification_type_display:
          type: string
          readOnly: true
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - notification_type
      - notification_type_display
      - title
    NotificationPreference:
      type: object
      description: Serializer for NotificationPreference model
      properties:
        id:
          type: integer
          readOnly: true
        application_status_in_app:
          type: boolean
        repayment_upcoming_in_app:
          type: boolean
        repayment_overdue_in_app:
          type: boolean
        note_reminder_in_app:
          type: boolean
        document_uploaded_in_app:
          type: boolean
        signature_required_in_app:
          type: boolean
        system_in_app:
          type: boolean
        application_status_email:
          type: boolean
        repayment_upcoming_email:
          type: boolean
        repayment_overdue_email:
          type: boolean
        note_reminder_email:
          type: boolean
        document_uploaded_email:
          type: boolean
        signature_required_email:
          type: boolean
        system_email:
          type: boolean
        daily_digest:
          type: boolean
        weekly_digest:
          type: boolean
      required:
      - id
    NotificationTypeEnum:
      enum:
      - application_status
      - repayment_upcoming
      - repayment_overdue
      - note_reminder
      - document_uploaded
      - signature_required
      - system
      type: string
      description: |-
        * `application_status` - Application Status Change
        * `repayment_upcoming` - Repayment Upcoming
        * `repayment_overdue` - Repayment Overdue
        * `note_reminder` - Note Reminder
        * `document_uploaded` - Document Uploaded
        * `signature_required` - Signature Required
        * `system` - System Notification
    NullEnum:
      enum:
      - null
    OccupancyEnum:
      enum:
      - owner_occupied
      - investment
      type: string
      description: |-
        * `owner_occupied` - Owner Occupied
        * `investment` - Investment Property
    OutputFormatEnum:
      enum:
      - pdf
      - docx
      type: string
      description: |-
        * `pdf` - pdf
        * `docx` - docx
    PaginatedApplicationListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationList'
    PaginatedBDMList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BDM'
    PaginatedBorrowerGuarantorList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BorrowerGuarantor'
    PaginatedBorrowerListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BorrowerList'
    PaginatedBranchList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Branch'
    PaginatedBrokerListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BrokerList'
    PaginatedCompanyAssetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanyAsset'
    PaginatedDocumentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedFeeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Fee'
    PaginatedGuarantorAssetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GuarantorAsset'
    PaginatedNoteCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NoteComment'
    PaginatedNoteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Note'
    PaginatedNotificationListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationList'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedRepaymentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Repayment'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PasswordResetConfirm:
      type: object
      description: Serializer for password reset confirmation
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PasswordResetRequest:
      type: object
      description: Serializer for password reset request
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PatchedApplicationList:
      type: object
      description: Serializer for listing applications with summary information
      properties:
        id:
          type: integer
          readOnly: true
        reference_number:
          type: string
          maxLength: 20
        borrower_name:
          type: string
          description: Get the primary borrower name(s)
          readOnly: true
        stage:
          $ref: '#/components/schemas/StageEnum'
        stage_display:
          type: string
          readOnly: true
        bdm_name:
          type: string
          description: Get the BDM name
          readOnly: true
        guarantor_name:
          type: string
          description: Get the guarantor name(s)
          readOnly: true
        purpose:
          type: string
          readOnly: true
        product_name:
          type: string
          description: Get the product name
          readOnly: true
        security_address:
          type: string
          description: Get the security property address
          readOnly: true
        loan_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        estimated_settlement_date:
          type: string
          format: date
          nullable: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        application_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ApplicationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        borrower_count:
          type: integer
          readOnly: true
        solvency_issues:
          type: object
          additionalProperties: {}
          description: Get solvency issues summary
          readOnly: true
    PatchedBDM:
      type: object
      description: Serializer for BDM information
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        branch_id:
          type: integer
          writeOnly: true
        branch_name:
          type: string
          writeOnly: true
        address:
          type: string
          writeOnly: true
        branch_phone:
          type: string
          writeOnly: true
        branch_email:
          type: string
          format: email
          writeOnly: true
    PatchedBorrowerDetail:
      type: object
      description: Serializer for detailed borrower information
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          nullable: true
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        residential_address:
          type: string
          nullable: true
        mailing_address:
          type: string
          nullable: true
        tax_id:
          type: string
          nullable: true
          description: Tax File Number or equivalent
          maxLength: 50
        marital_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/MaritalStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        residency_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ResidencyStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        employment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/EmploymentTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        employer_name:
          type: string
          nullable: true
          maxLength: 255
        employer_address:
          type: string
          nullable: true
        job_title:
          type: string
          nullable: true
          maxLength: 100
        employment_duration:
          type: integer
          nullable: true
          description: Duration in months
        annual_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        other_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        monthly_expenses:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        bank_name:
          type: string
          nullable: true
          maxLength: 100
        bank_account_name:
          type: string
          nullable: true
          maxLength: 100
        bank_account_number:
          type: string
          nullable: true
          maxLength: 30
        bank_bsb:
          type: string
          nullable: true
          maxLength: 10
        referral_source:
          type: string
          nullable: true
          maxLength: 100
        tags:
          type: string
          nullable: true
          maxLength: 255
        notes_text:
          type: string
          nullable: true
        is_company:
          type: boolean
        company_name:
          type: string
          nullable: true
          maxLength: 255
        company_abn:
          type: string
          nullable: true
          maxLength: 20
        company_acn:
          type: string
          nullable: true
          maxLength: 20
        industry_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/IndustryTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        contact_number:
          type: string
          nullable: true
          maxLength: 20
        annual_company_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        is_trustee:
          type: boolean
        is_smsf_trustee:
          type: boolean
        trustee_name:
          type: string
          nullable: true
          maxLength: 255
        registered_address_unit:
          type: string
          nullable: true
          maxLength: 20
        registered_address_street_no:
          type: string
          nullable: true
          maxLength: 20
        registered_address_street_name:
          type: string
          nullable: true
          maxLength: 100
        registered_address_suburb:
          type: string
          nullable: true
          maxLength: 100
        registered_address_state:
          type: string
          nullable: true
          maxLength: 50
        registered_address_postcode:
          type: string
          nullable: true
          maxLength: 10
        company_address:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
    PatchedBorrowerGuarantor:
      type: object
      description: Serializer for guarantor information
      properties:
        id:
          type: integer
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        guarantor_type:
          $ref: '#/components/schemas/GuarantorTypeEnum'
        title:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/TitleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        first_name:
          type: string
          nullable: true
          maxLength: 100
        last_name:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          nullable: true
        drivers_licence_no:
          type: string
          nullable: true
          maxLength: 50
        home_phone:
          type: string
          nullable: true
          maxLength: 20
        mobile:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        address_unit:
          type: string
          nullable: true
          maxLength: 20
        address_street_no:
          type: string
          nullable: true
          maxLength: 20
        address_street_name:
          type: string
          nullable: true
          maxLength: 100
        address_suburb:
          type: string
          nullable: true
          maxLength: 100
        address_state:
          type: string
          nullable: true
          maxLength: 50
        address_postcode:
          type: string
          nullable: true
          maxLength: 10
        address:
          type: string
          nullable: true
        occupation:
          type: string
          nullable: true
          maxLength: 100
        employer_name:
          type: string
          nullable: true
          maxLength: 255
        employment_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GuarantorEmploymentTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        annual_income:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        company_name:
          type: string
          nullable: true
          maxLength: 255
        company_abn:
          type: string
          nullable: true
          maxLength: 20
        company_acn:
          type: string
          nullable: true
          maxLength: 20
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        borrower:
          type: integer
          nullable: true
        application:
          type: integer
          nullable: true
    PatchedBranch:
      type: object
      description: Serializer for branch information
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        address:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
    PatchedBrokerDetail:
      type: object
      description: Serializer for detailed broker information
      properties:
        id:
          type: integer
          readOnly: true
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          readOnly: true
        bdms:
          type: array
          items:
            $ref: '#/components/schemas/BDM'
          readOnly: true
        created_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        name:
          type: string
          maxLength: 100
        company:
          type: string
          nullable: true
          maxLength: 100
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        phone:
          type: string
          nullable: true
          maxLength: 20
        address:
          type: string
          nullable: true
        commission_bank_name:
          type: string
          nullable: true
          maxLength: 100
        commission_account_name:
          type: string
          nullable: true
          maxLength: 100
        commission_account_number:
          type: string
          nullable: true
          maxLength: 30
        commission_bsb:
          type: string
          nullable: true
          maxLength: 10
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
    PatchedCompanyAsset:
      type: object
      description: Serializer for company assets
      properties:
        id:
          type: integer
          readOnly: true
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        description:
          type: string
          nullable: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        amount_owing:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        to_be_refinanced:
          type: boolean
        address:
          type: string
          nullable: true
    PatchedDocument:
      type: object
      description: Serializer for documents
      properties:
        id:
          type: integer
          readOnly: true
        document_type_display:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        file_url:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
        document_type:
          $ref: '#/components/schemas/DocumentTypeEnum'
        file:
          type: string
          format: uri
        file_name:
          type: string
          readOnly: true
          nullable: true
        file_size:
          type: integer
          readOnly: true
          nullable: true
          description: File size in bytes
        file_type:
          type: string
          readOnly: true
          nullable: true
          description: MIME type
        version:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        previous_version:
          type: integer
          nullable: true
        application:
          type: integer
          nullable: true
        borrower:
          type: integer
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
    PatchedFee:
      type: object
      description: Serializer for fees
      properties:
        id:
          type: integer
          readOnly: true
        fee_type_display:
          type: string
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        invoice_url:
          type: string
          readOnly: true
        fee_type:
          $ref: '#/components/schemas/FeeTypeEnum'
        description:
          type: string
          nullable: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
          nullable: true
        paid_date:
          type: string
          format: date
          nullable: true
        invoice:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        application:
          type: integer
        created_by:
          type: integer
          readOnly: true
          nullable: true
    PatchedGuarantorAsset:
      type: object
      description: Serializer for guarantor assets
      properties:
        id:
          type: integer
          readOnly: true
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        description:
          type: string
          nullable: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        amount_owing:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        address:
          type: string
          nullable: true
        bg_type:
          nullable: true
          description: |-
            Indicates if this asset belongs to BG1 or BG2 (only for guarantor assets)

            * `BG1` - BG1
            * `BG2` - BG2
          oneOf:
          - $ref: '#/components/schemas/BgTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    PatchedNote:
      type: object
      description: Serializer for notes
      properties:
        id:
          type: integer
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        assigned_to_name:
          type: string
          readOnly: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/NoteComment'
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 255
        content:
          type: string
          nullable: true
        remind_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        application:
          type: integer
          nullable: true
        borrower:
          type: integer
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
    PatchedNoteComment:
      type: object
      description: Serializer for note comments
      properties:
        id:
          type: integer
          readOnly: true
        note:
          type: integer
        content:
          type: string
        created_by:
          type: integer
          readOnly: true
          nullable: true
        created_by_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedProduct:
      type: object
      description: Serializer for the Product model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        applications:
          type: array
          items:
            type: integer
        documents:
          type: array
          items:
            type: integer
        borrowers:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRepayment:
      type: object
      description: Serializer for repayments
      properties:
        id:
          type: integer
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        invoice_url:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
          nullable: true
        paid_date:
          type: string
          format: date
          nullable: true
        invoice:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        reminder_sent:
          type: boolean
          readOnly: true
        overdue_3_day_sent:
          type: boolean
          readOnly: true
        overdue_7_day_sent:
          type: boolean
          readOnly: true
        overdue_10_day_sent:
          type: boolean
          readOnly: true
        application:
          type: integer
        created_by:
          type: integer
          readOnly: true
          nullable: true
    PatchedUser:
      type: object
      description: Serializer for User model
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        phone:
          type: string
          nullable: true
          maxLength: 20
    Product:
      type: object
      description: Serializer for the Product model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        applications:
          type: array
          items:
            type: integer
        documents:
          type: array
          items:
            type: integer
        borrowers:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    PropertyTypeEnum:
      enum:
      - residential
      - commercial
      - industrial
      - retail
      - land
      - rural
      - other
      type: string
      description: |-
        * `residential` - Residential
        * `commercial` - Commercial
        * `industrial` - Industrial
        * `retail` - Retail
        * `land` - Land
        * `rural` - Rural
        * `other` - Other
    Repayment:
      type: object
      description: Serializer for repayments
      properties:
        id:
          type: integer
          readOnly: true
        created_by_name:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        invoice_url:
          type: string
          readOnly: true
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        due_date:
          type: string
          format: date
          nullable: true
        paid_date:
          type: string
          format: date
          nullable: true
        invoice:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        reminder_sent:
          type: boolean
          readOnly: true
        overdue_3_day_sent:
          type: boolean
          readOnly: true
        overdue_7_day_sent:
          type: boolean
          readOnly: true
        overdue_10_day_sent:
          type: boolean
          readOnly: true
        application:
          type: integer
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - amount
      - application
      - created_at
      - created_by
      - created_by_name
      - id
      - invoice_url
      - overdue_10_day_sent
      - overdue_3_day_sent
      - overdue_7_day_sent
      - reminder_sent
      - status
      - updated_at
    RepaymentComplianceReport:
      type: object
      description: Serializer for repayment compliance report data
      properties:
        total_repayments:
          type: integer
        paid_on_time:
          type: integer
        paid_late:
          type: integer
        missed:
          type: integer
        compliance_rate:
          type: number
          format: double
        average_days_late:
          type: number
          format: double
        total_amount_due:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        total_amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
        payment_rate:
          type: number
          format: double
        monthly_breakdown:
          type: array
          items:
            type: object
            additionalProperties: {}
      required:
      - average_days_late
      - compliance_rate
      - missed
      - monthly_breakdown
      - paid_late
      - paid_on_time
      - payment_rate
      - total_amount_due
      - total_amount_paid
      - total_repayments
    RepaymentFrequencyEnum:
      enum:
      - weekly
      - fortnightly
      - monthly
      - quarterly
      - annually
      type: string
      description: |-
        * `weekly` - Weekly
        * `fortnightly` - Fortnightly
        * `monthly` - Monthly
        * `quarterly` - Quarterly
        * `annually` - Annually
    ResidencyStatusEnum:
      enum:
      - citizen
      - permanent_resident
      - temporary_resident
      - foreign_investor
      type: string
      description: |-
        * `citizen` - Citizen
        * `permanent_resident` - Permanent Resident
        * `temporary_resident` - Temporary Resident
        * `foreign_investor` - Foreign Investor
    RoleEnum:
      enum:
      - admin
      - broker
      - bd
      - client
      type: string
      description: |-
        * `admin` - Admin
        * `broker` - Broker
        * `bd` - Business Development
        * `client` - Client
    SecurityProperty:
      type: object
      description: Serializer for security properties
      properties:
        id:
          type: integer
          readOnly: true
        address_unit:
          type: string
          nullable: true
          maxLength: 20
        address_street_no:
          type: string
          nullable: true
          maxLength: 20
        address_street_name:
          type: string
          nullable: true
          maxLength: 100
        address_suburb:
          type: string
          nullable: true
          maxLength: 100
        address_state:
          type: string
          nullable: true
          maxLength: 50
        address_postcode:
          type: string
          nullable: true
          maxLength: 10
        current_mortgagee:
          type: string
          nullable: true
          maxLength: 255
        first_mortgage:
          type: string
          nullable: true
          maxLength: 255
        second_mortgage:
          type: string
          nullable: true
          maxLength: 255
        current_debt_position:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        property_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/PropertyTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        bedrooms:
          type: integer
          nullable: true
        bathrooms:
          type: integer
          nullable: true
        car_spaces:
          type: integer
          nullable: true
        building_size:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Size in square meters
        land_size:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
          description: Size in square meters
        is_single_story:
          type: boolean
        has_garage:
          type: boolean
        has_carport:
          type: boolean
        has_off_street_parking:
          type: boolean
        occupancy:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OccupancyEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        estimated_value:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
        purchase_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,10}(?:\.\d{0,2})?$
          nullable: true
      required:
      - id
    StageEnum:
      enum:
      - inquiry
      - sent_to_lender
      - funding_table_issued
      - iloo_issued
      - iloo_signed
      - commitment_fee_paid
      - app_submitted
      - valuation_ordered
      - valuation_received
      - more_info_required
      - formal_approval
      - loan_docs_instructed
      - loan_docs_issued
      - loan_docs_signed
      - settlement_conditions
      - settled
      - closed
      - declined
      - withdrawn
      type: string
      description: |-
        * `inquiry` - Inquiry
        * `sent_to_lender` - Sent to Lender
        * `funding_table_issued` - Funding Table Issued
        * `iloo_issued` - ILOO Issued
        * `iloo_signed` - ILOO Signed
        * `commitment_fee_paid` - Commitment Fee Paid
        * `app_submitted` - App Submitted
        * `valuation_ordered` - Valuation Ordered
        * `valuation_received` - Valuation Received
        * `more_info_required` - More Info Required
        * `formal_approval` - Formal Approval
        * `loan_docs_instructed` - Loan Docs Instructed
        * `loan_docs_issued` - Loan Docs Issued
        * `loan_docs_signed` - Loan Docs Signed
        * `settlement_conditions` - Settlement Conditions
        * `settled` - Settled
        * `closed` - Closed
        * `declined` - Declined
        * `withdrawn` - Withdrawn
    TitleEnum:
      enum:
      - mr
      - mrs
      - ms
      - miss
      - dr
      - other
      type: string
      description: |-
        * `mr` - Mr
        * `mrs` - Mrs
        * `ms` - Ms
        * `miss` - Miss
        * `dr` - Dr
        * `other` - Other
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TransactionTypeEnum:
      enum:
      - fee_created
      - fee_paid
      - repayment_scheduled
      - repayment_received
      - adjustment
      type: string
      description: |-
        * `fee_created` - Fee Created
        * `fee_paid` - Fee Paid
        * `repayment_scheduled` - Repayment Scheduled
        * `repayment_received` - Repayment Received
        * `adjustment` - Adjustment
    User:
      type: object
      description: Serializer for User model
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        phone:
          type: string
          nullable: true
          maxLength: 20
      required:
      - email
      - id
    UserCreate:
      type: object
      description: Serializer for creating users
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/RoleEnum'
        phone:
          type: string
          nullable: true
          maxLength: 20
        username:
          type: string
      required:
      - email
      - id
      - password
    UserLogin:
      type: object
      description: Serializer for user login
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
